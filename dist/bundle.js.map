{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/game.js","webpack:///./src/index.js","webpack:///./src/line.js","webpack:///./src/lineup.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAyB;AACI;AAC7B;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;AACA,sB;AACA;;;AAGA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,+CAAM;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,K;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,K;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,6CAAI;AAC/C;;;AAGA,C;;;;;;;;;;;;AClQA;AAAA;AAAA;AAC+B;;AAE/B;;AAEA,MAAM,6CAAU;;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;;;;;;;;;;;;;;ACpDA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Line from './line'\nimport LineUp from './lineup'\n// const Menu = require('./menu')\n\n\nconst COLORS = [\n  'red',\n  'rgb(4, 0, 255)', //blue\n  'rgb(128, 0, 255)', //purple\n  'rgb(4, 211, 4)' //green\n]\n\nexport default class ColorBreak {\n  constructor(canvas) {\n    this.ctx = canvas.getContext(\"2d\");\n    this.dimensions = { width: canvas.width, height: canvas.height };\n    this.lines = [];\n    this.shotlines = [];\n    this.strikes = [];\n    this.speed = 1;\n    this.registerEvents();\n    this.restart();\n   \n\n  }\n\n\n  animate() {\n    \n    \n    this.createLines(this.speed)\n    \n\n    this.lines.forEach((line, idx) => {\n      if (idx === 0) { \n        line.animate(this.ctx)\n        \n\n      } else if ( this.lines[idx - 1].y - this.lines[idx].y >= 130) {\n        this.lines[idx].animate(this.ctx)\n      }\n      \n      if (line.y > 640) {\n        this.removeLine(line, idx)\n        this.strikes.push(idx) \n      }\n      \n      if (this.lineup && this.collidedWith(line, this.lineup)) {\n        let shotIdx = this.shotlines.indexOf(this.lineup)\n        this.removeLines(line, idx, this.lineup, shotIdx)\n      }\n      if (this.lineup && this.collidedWithWrongColor(line, this.lineup)) {\n        let shotIdx = this.shotlines.indexOf(this.lineup)\n        this.removeLineStrike(this.lineup, shotIdx)\n      }\n\n    })\n        \n    if (this.lineup) {\n      this.shotlines.forEach((shot, idx) => {\n        shot.animate(this.ctx)\n        if (shot.y < 0 ) {\n          this.removeShot(shot, idx)\n        }\n      })\n    }\n\n    if (this.gameOver()) {\n      this.running = false;\n    }\n\n    this.drawScore();\n   \n    \n    if (this.running) {\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  \n  }\n\n  \n\n  restart() {\n    this.running = false;\n    this.score = 0\n    // this.animate();\n  }\n  \n  play() {\n    this.running = true;\n    this.modalEl.classList.remove('modal-on');\n    this.modalEl.classList.add('modal-off')\n    // this.createLines(this.speed)\n    this.animate();\n  }\n\n  // click(e) {\n  //   if (!this.running) {\n  //     this.play();\n  //   }\n  // }\n\n  handlestart(e) {\n    if (!this.running && e.key === ' ') {\n      e.preventDefault()\n      this.play();\n    }\n  }\n\n  gameOver() {\n    if (this.strikes.length >= 3) {\n      return true \n    }\n    return false\n  }\n  \n  shootLine(color) {\n    // debugger\n    this.lineup = new LineUp(color);\n    this.shotlines.push(this.lineup)\n  }\n  \n  handlekey(e) {\n    if (e.key === 'a') {\n      e.preventDefault()\n      this.shootLine('red')\n    } else if (e.key === 's') {\n      e.preventDefault()\n      this.shootLine('rgb(4, 0, 255)')\n    } else if (e.key === 'd') {\n      e.preventDefault()\n      this.shootLine('rgb(128, 0, 255)')\n    } else if (e.key === 'f') {\n      e.preventDefault()\n      this.shootLine('rgb(4, 211, 4)')\n    }\n  }\n\n  handleMusic(e) {\n    e.preventDefault()\n    if (this.musicBtn.classList.contains('fa-volume-mute')) {\n      this.music.play();\n      this.musicBtn.classList.remove('fa-volume-mute')\n      this.musicBtn.classList.add('fa-volume-up')\n      \n    } else if (this.musicBtn.classList.contains('fa-volume-up')) {\n      this.music.pause();\n      this.musicBtn.classList.remove('fa-volume-up')\n      this.musicBtn.classList.add('fa-volume-mute')\n      \n    }\n\n  }\n\n  setDifficulty(e) {\n    e.preventDefault()\n    if (this.difficulty.classList.contains('easy')) {\n      this.difficulty.classList.remove('easy')\n      this.difficulty.classList.add('medium')\n      this.difficulty.innerHTML = \"Good Challenge\"\n      this.speed = 2\n      console.log(this.difficulty)\n    } else if (this.difficulty.classList.contains('medium')) {\n      this.difficulty.classList.remove('medium')\n      this.difficulty.classList.add('hard')\n      this.difficulty.innerHTML = \"YOU'RE INSANE!\"\n      this.speed = 3\n      console.log(this.difficulty)\n    } else if (this.difficulty.classList.contains('hard')) {\n      this.difficulty.classList.remove('hard')\n      this.difficulty.classList.add('easy')\n      this.difficulty.innerHTML = \"Welcome Back To Easy\"\n      this.speed = 1\n      console.log(this.difficulty)\n    } \n  }\n\n  registerEvents() {\n    this.modalEl = document.getElementById('modal')\n    this.music = document.getElementById('music')\n    this.musicBtn = document.getElementById('music-btn')\n    this.level = document.getElementById('level')\n    this.difficulty = document.getElementById('difficulty')\n    \n\n    this.handleDifficulty = this.setDifficulty.bind(this);\n    this.level.addEventListener('click', this.handleDifficulty)\n    \n    this.musicEvent = this.handleMusic.bind(this)\n    this.musicBtn.addEventListener('click', this.musicEvent)\n    \n    this.startGameHandler = this.handlestart.bind(this);\n    window.addEventListener(\"keydown\", this.startGameHandler);\n    \n    this.keydownEvent = this.handlekey.bind(this)         \n    window.addEventListener(\"keydown\", this.keydownEvent)\n  }\n\n  drawScore() {\n    //loc will be the location \n    const loc = { x: 730, y: 80 }\n    this.ctx.font = \"bold 50pt serif\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillText(this.score, loc.x, loc.y);\n    this.ctx.strokeStyle = \"black\";\n    this.ctx.lineWidth = 2;\n    this.ctx.strokeText(this.score, loc.x, loc.y);\n  }\n\n  collidedWith(line1, line2) {\n    //check to see if falling line bottom matches shooting lines top\n    if (line1.y > line2.y && line1.color !== line2.color) {\n      return false\n    } else if (line1.y > line2.y && line1.color === line2.color) {\n      return true\n    } \n  }\n\n  collidedWithWrongColor(line1, line2) {\n    //check to see if falling line bottom matches shooting lines top\n    if (line1.y < line2.y) {\n      return false\n    } else if (line1.y >= line2.y && line1.color !== line2.color) {\n      return true\n    }\n  }\n\n\n  removeLines(line1, idx, line2, shotIdx) {\n    this.ctx.clearRect(line1.x, line1.y, line1.dimensions.width, line1.dimensions.height)\n    this.ctx.clearRect(line2.x, line2.y, line2.dimensions.width, line2.dimensions.height)\n    this.lines.splice(idx, 1)\n    this.shotlines.splice(shotIdx, 1)\n    this.score += 1\n  }\n\n  removeLineStrike(line1, idx) {\n    this.ctx.clearRect(line1.x, line1.y, line1.dimensions.width, line1.dimensions.height)\n    this.shotlines.splice(idx, 1)\n    // this.strikes.push(idx)\n  }\n\n  removeLine(line, idx) {\n    this.ctx.clearRect(line.x, line.y, line.dimensions.width, line.dimensions.height)\n    this.lines.splice(idx, 1)\n  }\n\n  removeShot(shot, idx) {\n    this.ctx.clearRect(shot.x, shot.y, shot.dimensions.width, shot.dimensions.height)\n    this.shotlines.splice(idx, 1)\n  }\n\n  createLines(speed) {\n    let line = null;\n    line = this.lines.push(this.line = new Line(COLORS[Math.floor(Math.random() * COLORS.length)], speed)) \n  }\n\n\n}","console.log('yo')\nimport ColorBreak from './game'\n\n  const canvas = document.getElementById('game-canvas');\n\n  new ColorBreak(canvas);\n  \n","const LINE_CONSTANTS = {\n  width: 800,\n  height: 20,\n  // speed: 1,\n  endY: 640\n}\n\nexport default class Line {\n  constructor(color, speed) {\n    this.x = 40;\n    this.y = 0;\n    this.speed = speed\n    this.dimensions = {\n      width: LINE_CONSTANTS.width,\n      height: LINE_CONSTANTS.height\n    }\n    this.color = color;\n    this.endY = LINE_CONSTANTS.endY\n  }\n  \n  animate(ctx) {\n   this.moveLine(ctx)\n   this.drawLine(ctx)\n  }\n\n  moveLine(ctx) {\n    ctx.clearRect(this.x, this.y, this.dimensions.width, this.dimensions.height)\n    this.y = this.y + this.speed;\n  }\n\n  drawLine(ctx) {\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.fillRect(this.x, this.y, this.dimensions.width, this.dimensions.height)\n    ctx.closePath();\n  }\n\n  bounds() {\n    return {\n      left: this.x,\n      right: this.x + LINE_CONSTANTS.width,\n      top: this.y,\n      bottom: this.y + LINE_CONSTANTS.height\n    }\n  }\n\n\n  outOfBounds() {\n    (this.y > 660)\n  }\n\n\n}\n\n","const LINE_CONSTANTS = {\n  width: 800,\n  height: 20,\n  speed: 5,\n  endY: 0\n}\n\nexport default class LineUp {\n  constructor(color) {\n    this.x = 40;\n    this.y = 620;\n    this.dimensions = {\n      width: LINE_CONSTANTS.width,\n      height: LINE_CONSTANTS.height\n    }\n    this.color = color;\n    this.endY = LINE_CONSTANTS.endY\n  }\n\n  animate(ctx) {\n    this.moveLine(ctx)\n    this.drawLine(ctx)\n    \n  }\n\n  moveLine(ctx) {\n    ctx.clearRect(this.x, this.y, this.dimensions.width, this.dimensions.height)\n    this.y = this.y - LINE_CONSTANTS.speed;\n  }\n\n  drawLine(ctx) {\n    ctx.beginPath();\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.x, this.y, this.dimensions.width, this.dimensions.height)\n    ctx.closePath();\n  }\n\n  bounds() {\n    return {\n      left: this.x,\n      right: this.x - LINE_CONSTANTS.width,\n      top: this.y,\n      bottom: this.y - LINE_CONSTANTS.height\n    }\n  }\n\n\n  outOfBounds() {\n    return (this.y < 0)\n  }\n\n\n}"],"sourceRoot":""}